services:
  # Database Services
  postgres:
    image: postgres:16-alpine
    container_name: wk_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-wk_main}
      POSTGRES_USER: ${POSTGRES_USER:-wk_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wk_network

  redis:
    image: redis:7-alpine
    container_name: wk_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - wk_network

  # Backend Services
  wk-gateway:
    build: ./wk-gateway
    container_name: wk_gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - CRM_LARAVEL_URL=http://wk-crm-laravel:8000
      - CRM_DOTNET_URL=http://wk-crm-dotnet:5000
      - PRODUCTS_API_URL=http://wk-products-api:3001
      - AI_SERVICE_URL=http://wk-ai-service:8000
    depends_on:
      - postgres
      - redis
    networks:
      - wk_network

  wk-crm-laravel:
    build: ./wk-crm-laravel
    container_name: wk_crm_laravel
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=development
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=${POSTGRES_DB:-wk_main}
      - DB_USERNAME=${POSTGRES_USER:-wk_user}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-secure_password}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./wk-crm-laravel:/var/www/html
    networks:
      - wk_network

  wk-crm-dotnet:
    build: ./wk-crm-dotnet
    container_name: wk_crm_dotnet
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=${POSTGRES_DB:-wk_main}_dotnet;Username=${POSTGRES_USER:-wk_user};Password=${POSTGRES_PASSWORD:-secure_password}
      - Redis__ConnectionString=redis:6379,password=${REDIS_PASSWORD:-redis_password}
    depends_on:
      - postgres
      - redis
    networks:
      - wk_network

  wk-products-api:
    build: ./wk-products-api
    container_name: wk_products_api
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB:-wk_main}_products
      - DB_USER=${POSTGRES_USER:-wk_user}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-secure_password}
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
    depends_on:
      - postgres
      - redis
    networks:
      - wk_network

  wk-ai-service:
    build: ./wk-ai-service
    container_name: wk_ai_service
    ports:
      - "8080:8000"
    environment:
      - ENVIRONMENT=development
      - GEMINI_API_KEY=${GEMINI_API_KEY:-your_gemini_api_key}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-wk_user}:${POSTGRES_PASSWORD:-secure_password}@postgres:5432/${POSTGRES_DB:-wk_main}_ai
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
    depends_on:
      - postgres
      - redis
    networks:
      - wk_network

  # Frontend Services
  wk-admin-frontend:
    build: ./wk-admin-frontend
    container_name: wk_admin_frontend
    ports:
      - "4200:80"
    environment:
      - NODE_ENV=development
      - API_URL=http://localhost:3000
    depends_on:
      - wk-gateway
    networks:
      - wk_network

  wk-customer-app:
    build: ./wk-customer-app
    container_name: wk_customer_app
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3000
    depends_on:
      - wk-gateway
    networks:
      - wk_network

  # Development Tools
  nginx:
    image: nginx:alpine
    container_name: wk_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infrastructure/nginx/sites:/etc/nginx/sites-available
      - ./infrastructure/ssl:/etc/nginx/ssl
    depends_on:
      - wk-gateway
      - wk-admin-frontend
      - wk-customer-app
    networks:
      - wk_network

volumes:
  postgres_data:
  redis_data:

networks:
  wk_network:
    driver: bridge